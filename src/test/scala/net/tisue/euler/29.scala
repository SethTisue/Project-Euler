package net.tisue.euler
import Primes._

// How many distinct terms are in the sequence generated by a^b for
// 2 <= a <= 100 and 2 <= b <= 100?

class Problem29 extends Problem(29, "9183"):
  def solve =
    def factors(n: Int): List[Int] =
      if n == 1 then Nil
      else
        val f = primes.find(n % _ == 0).get
        f :: factors(n / f)
    val terms = for a <- (2 to 100)
                    b <- (2 to 100)
                yield factors(a).flatMap(List.fill(b)(_))
    terms.toSet.size
